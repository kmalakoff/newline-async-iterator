{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\n// @ts-ignore\nimport decodeUTF8 from './decodeUTF8.ts';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param source The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>): AsyncIterableIterator<string> {\n  let string = '';\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise((resolve, reject) => {\n      const args = indexOfNewline(string, 0, true) as number[];\n      const index = args[0];\n      const skip = args[1];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === '\\n') return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then((next) => {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise((resolve, reject) => {\n        generateNext()\n          .then((args) => {\n            const index = args[0];\n            const skip = args[1];\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = {\n                value: string,\n                done: false,\n              };\n              string = '';\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["newlineIterator","hasIterator","Symbol","asyncIterator","source","string","done","sourceIterator","generateNext","Promise","resolve","reject","args","indexOfNewline","index","skip","length","next","then","value","undefined","decodeUTF8","catch","iterator","result","line","substr"],"mappings":";;;;+BAMA;;;;;;;;;;;;;CAaC,GAED;;;eAAwBA;;;qEArBG;mEAEJ;;;;;;AAEvB,IAAMC,cAAc,OAAOC,WAAW,eAAeA,OAAOC,aAAa;AAiB1D,SAASH,gBAAgBI,MAA6D;IACnG,IAAIC,SAAS;IACb,IAAIC,OAAO;IAEX,mBAAmB,GACnB,IAAMC,iBAAiBN,cAAcG,MAAM,CAACF,OAAOC,aAAa,CAAC,KAAKC;IACtE,kBAAkB,GAElB,SAASI;QACP,OAAO,IAAIC,QAAQ,SAACC,SAASC;YAC3B,IAAMC,OAAOC,IAAAA,uBAAc,EAACR,QAAQ,GAAG;YACvC,IAAMS,QAAQF,IAAI,CAAC,EAAE;YACrB,IAAMG,OAAOH,IAAI,CAAC,EAAE;YACpB,IAAIE,SAAS,GAAG;gBACd,IAAIA,UAAUT,OAAOW,MAAM,GAAG,KAAKX,MAAM,CAACS,MAAM,KAAK,MAAM,OAAOJ,QAAQ;oBAACI;oBAAOC;iBAAK;YACzF;YACA,IAAIT,MAAM,OAAOI,QAAQ;gBAACI;gBAAOC;aAAK;YACtCR,eAAeU,IAAI,GAAGC,IAAI,CAAC,SAACD;gBAC1B,IAAIA,KAAKX,IAAI,EAAEA,OAAO;gBACtB,IAAIW,KAAKE,KAAK,KAAKC,WAAWf,UAAUgB,IAAAA,qBAAU,EAACJ,KAAKE,KAAK;gBAC7DX,eAAeU,IAAI,CAACR,SAASY,KAAK,CAACX;YACrC;QACF;IACF;IAEA,IAAMY,WAAW;QACfN,MAAAA,SAAAA;YACE,OAAO,IAAIR,QAAQ,SAACC,SAASC;gBAC3BH,eACGU,IAAI,CAAC,SAACN;oBACL,IAAME,QAAQF,IAAI,CAAC,EAAE;oBACrB,IAAMG,OAAOH,IAAI,CAAC,EAAE;oBACpB,IAAIE,QAAQ,GAAG;wBACb,IAAI,CAACT,OAAOW,MAAM,EAAE,OAAON,QAAQ;4BAAES,OAAOC;4BAAWd,MAAM;wBAAK;wBAClE,IAAMkB,SAA0C;4BAC9CL,OAAOd;4BACPC,MAAM;wBACR;wBACAD,SAAS;wBACT,OAAOK,QAAQc;oBACjB;oBACA,IAAMC,OAAOpB,OAAOqB,MAAM,CAAC,GAAGZ;oBAC9BT,SAASA,OAAOqB,MAAM,CAACZ,QAAQC;oBAC/B,OAAOL,QAAQ;wBAAES,OAAOM;wBAAMnB,MAAM;oBAAM;gBAC5C,GACCgB,KAAK,CAACX;YACX;QACF;IACF;IAEA,IAAIV,aAAa;QACfsB,QAAQ,CAACrB,OAAOC,aAAa,CAAC,GAAG;YAC/B,OAAO,IAAI;QACb;IACF;IAEA,OAAOoB;AACT"}