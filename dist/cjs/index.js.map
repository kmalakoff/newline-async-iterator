{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\n// @ts-ignore\nimport decodeUTF8 from './decodeUTF8.ts';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>): AsyncIterableIterator<string> {\n  let string = '';\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise(function (resolve, reject) {\n      const args = indexOfNewline(string, 0, true) as number[];\n      const index = args[0];\n      const skip = args[1];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === '\\n') return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then(function (next) {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise(function (resolve, reject) {\n        generateNext()\n          .then(function (args) {\n            const index = args[0];\n            const skip = args[1];\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = { value: string, done: false };\n              string = '';\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["newlineIterator","source","string","done","sourceIterator","hasIterator","Symbol","asyncIterator","generateNext","Promise","resolve","reject","args","indexOfNewline","index","skip","length","next","then","value","undefined","decodeUTF8","catch","iterator","result","line","substr"],"mappings":"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"}