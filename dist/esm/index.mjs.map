{"version":3,"sources":["index.ts"],"sourcesContent":["import indexOfNewline from 'index-of-newline';\nimport decodeUTF8 from './decodeUTF8.js';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>): AsyncIterableIterator<string> {\n  let string = '';\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise(function (resolve, reject) {\n      const [index, skip] = indexOfNewline(string, 0, true) as number[];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === '\\n') return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then(function (next) {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise(function (resolve, reject) {\n        generateNext()\n          .then(function ([index, skip]) {\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = { value: string, done: false };\n              string = '';\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["indexOfNewline","decodeUTF8","hasIterator","Symbol","asyncIterator","newlineIterator","source","string","done","sourceIterator","generateNext","Promise","resolve","reject","index","skip","length","next","then","value","undefined","catch","iterator","result","line","substr"],"mappings":"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"}