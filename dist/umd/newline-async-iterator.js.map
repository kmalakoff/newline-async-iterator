{"version":3,"file":"newline-async-iterator.js","sources":["../../src/decodeUTF8.ts","../../src/index.ts"],"sourcesContent":["/* eslint-disable no-undef */\n// https://developer.mozilla.org/en-US/docs/Glossary/Base64#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n/* c8 ignore start */\nlet decodeUTF8 = function decode(uint8Array: Uint8Array): string {\n  let sView = \"\";\n\n  for (let nPart, nLen = uint8Array.length, nIdx = 0; nIdx < nLen; nIdx++) {\n    nPart = uint8Array[nIdx];\n    sView += String.fromCharCode(\n      nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n          (nPart - 252) * 1073741824 +\n            ((uint8Array[++nIdx] - 128) << 24) +\n            ((uint8Array[++nIdx] - 128) << 18) +\n            ((uint8Array[++nIdx] - 128) << 12) +\n            ((uint8Array[++nIdx] - 128) << 6) +\n            uint8Array[++nIdx] -\n            128\n        : nPart > 247 && nPart < 252 && nIdx + 4 < nLen /* five bytes */\n        ? ((nPart - 248) << 24) +\n          ((uint8Array[++nIdx] - 128) << 18) +\n          ((uint8Array[++nIdx] - 128) << 12) +\n          ((uint8Array[++nIdx] - 128) << 6) +\n          uint8Array[++nIdx] -\n          128\n        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen /* four bytes */\n        ? ((nPart - 240) << 18) +\n          ((uint8Array[++nIdx] - 128) << 12) +\n          ((uint8Array[++nIdx] - 128) << 6) +\n          uint8Array[++nIdx] -\n          128\n        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen /* three bytes */\n        ? ((nPart - 224) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n        : nPart > 191 && nPart < 224 && nIdx + 1 < nLen /* two bytes */\n        ? ((nPart - 192) << 6) + uint8Array[++nIdx] - 128\n        : /* nPart < 127 ? */ /* one byte */\n          nPart\n    );\n  }\n\n  return sView;\n};\n/* c8 ignore stop */\n\nif (typeof TextDecoder !== \"undefined\") {\n  const decoder = new TextDecoder(\"utf8\");\n  decodeUTF8 = function decodeTextDecoder(uint8Array: Uint8Array): string {\n    return decoder.decode(uint8Array);\n  };\n}\n\nexport default decodeUTF8;\n","import indexOfNewline from \"index-of-newline\";\nimport decodeUTF8 from \"./decodeUTF8\";\n\nconst hasIterator = typeof Symbol !== \"undefined\" && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(\n  source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>\n): AsyncIterableIterator<string> {\n  let string = \"\";\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise(function (resolve, reject) {\n      const [index, skip] = indexOfNewline(string, 0, true) as number[];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === \"\\n\") return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then(function (next) {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise(function (resolve, reject) {\n        generateNext()\n          .then(function ([index, skip]) {\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = { value: string, done: false };\n              string = \"\";\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["decodeUTF8","decode","uint8Array","sView","nPart","nLen","length","nIdx","String","fromCharCode","TextDecoder","decoder","decodeTextDecoder","hasIterator","Symbol","asyncIterator","newlineIterator","source","string","done","sourceIterator","generateNext","Promise","resolve","reject","indexOfNewline","index","skip","next","then","value","undefined","iterator","result","line","substr"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA;;EACA;EACA,IAAIA,UAAU,GAAG,SAASC,MAAT,CAAgBC,UAAhB,EAAgD;IAC/D,IAAIC,KAAK,GAAG,EAAZ,CAAA;;EAEA,EAAA,KAAK,IAAIC,KAAJ,EAAWC,IAAI,GAAGH,UAAU,CAACI,MAA7B,EAAqCC,IAAI,GAAG,CAAjD,EAAoDA,IAAI,GAAGF,IAA3D,EAAiEE,IAAI,EAArE,EAAyE;EACvEH,IAAAA,KAAK,GAAGF,UAAU,CAACK,IAAD,CAAlB,CAAA;EACAJ,IAAAA,KAAK,IAAIK,MAAM,CAACC,YAAP,CACPL,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAAvB,IAA8BG,IAAI,GAAG,CAAP,GAAWF,IAAAA;EAAK;EAA9C;EACI;EACA,IAAA,CAACD,KAAK,GAAG,GAAT,IAAgB,UAAhB,IACIF,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EADjC,CAEIL,IAAAA,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EAFjC,CAGIL,IAAAA,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EAHjC,CAAA,IAIIL,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,CAJjC,CAAA,GAKEL,UAAU,CAAC,EAAEK,IAAH,CALZ,GAME,GARN,GASIH,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAAvB,IAA8BG,IAAI,GAAG,CAAP,GAAWF,IAAAA;EAAK;QAC9C,CAAED,KAAK,GAAG,GAAT,IAAiB,EAAlB,KACEF,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EAD/B,CAEEL,IAAAA,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EAF/B,CAGEL,IAAAA,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,CAH/B,CAAA,GAIAL,UAAU,CAAC,EAAEK,IAAH,CAJV,GAKA,GANA,GAOAH,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAAvB,IAA8BG,IAAI,GAAG,CAAP,GAAWF,IAAAA;EAAK;QAC9C,CAAED,KAAK,GAAG,GAAT,IAAiB,EAAlB,KACEF,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,EAD/B,KAEEL,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,CAF/B,IAGAL,UAAU,CAAC,EAAEK,IAAH,CAHV,GAIA,GALA,GAMAH,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAAvB,IAA8BG,IAAI,GAAG,CAAP,GAAWF,IAAAA;EAAK;EAA9C,MACA,CAAED,KAAK,GAAG,GAAT,IAAiB,EAAlB,KAA0BF,UAAU,CAAC,EAAEK,IAAH,CAAV,GAAqB,GAAtB,IAA8B,CAAvD,CAA4DL,GAAAA,UAAU,CAAC,EAAEK,IAAH,CAAtE,GAAiF,GADjF,GAEAH,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAAvB,IAA8BG,IAAI,GAAG,CAAP,GAAWF,IAAAA;EAAK;EAA9C,MACA,CAAED,KAAK,GAAG,GAAT,IAAiB,CAAlB,IAAuBF,UAAU,CAAC,EAAEK,IAAH,CAAjC,GAA4C,GAD5C;EAEA;;EAAoB;EACpBH,IAAAA,KA5BG,CAAT,CAAA;EA8BD,GAAA;;EAED,EAAA,OAAOD,KAAP,CAAA;EACD,CAtCD,CAAA;EAuCA;;;EAEA,IAAI,OAAOO,WAAP,KAAuB,WAA3B,EAAwC;EACtC,EAAA,IAAMC,OAAO,GAAG,IAAID,WAAJ,CAAgB,MAAhB,CAAhB,CAAA;;EACAV,EAAAA,UAAU,GAAG,SAASY,iBAAT,CAA2BV,UAA3B,EAA2D;EACtE,IAAA,OAAOS,OAAO,CAACV,MAAR,CAAeC,UAAf,CAAP,CAAA;KADF,CAAA;EAGD,CAAA;;AAED,qBAAeF,UAAf;;EChDA,IAAMa,WAAW,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,aAA5D,CAAA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEe,SAASC,eAAT,CACbC,MADa,EAEkB;IAC/B,IAAIC,MAAM,GAAG,EAAb,CAAA;IACA,IAAIC,IAAI,GAAG,KAAX,CAAA;EAEA;;EACA,EAAA,IAAMC,cAAc,GAAGP,WAAW,GAAGI,MAAM,CAACH,MAAM,CAACC,aAAR,CAAN,EAAH,GAAoCE,MAAtE,CAAA;EACA;;EAEA,EAAA,SAASI,YAAT,GAA2C;EACzC,IAAA,OAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;EAC5C,MAAA,IAAA,IAAA,GAAsBC,kCAAc,CAACP,MAAD,EAAS,CAAT,EAAY,IAAZ,CAApC;EAAA,UAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;EAAA,UAAOQ,KAAP,GAAA,KAAA,CAAA,CAAA,CAAA;EAAA,UAAcC,IAAd,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;;QACA,IAAID,KAAK,IAAI,CAAb,EAAgB;UACd,IAAIA,KAAK,KAAKR,MAAM,CAACZ,MAAP,GAAgB,CAA1B,IAA+BY,MAAM,CAACQ,KAAD,CAAN,KAAkB,IAArD,EAA2D,OAAOH,OAAO,CAAC,CAACG,KAAD,EAAQC,IAAR,CAAD,CAAd,CAAA;EAC5D,OAAA;;QACD,IAAIR,IAAJ,EAAU,OAAOI,OAAO,CAAC,CAACG,KAAD,EAAQC,IAAR,CAAD,CAAd,CAAA;EACVP,MAAAA,cAAc,CAACQ,IAAf,EAAA,CAAsBC,IAAtB,CAA2B,UAAUD,IAAV,EAAgB;EACzC,QAAA,IAAIA,IAAI,CAACT,IAAT,EAAeA,IAAI,GAAG,IAAP,CAAA;EACf,QAAA,IAAIS,IAAI,CAACE,KAAL,KAAeC,SAAnB,EAA8Bb,MAAM,IAAIlB,YAAU,CAAC4B,IAAI,CAACE,KAAN,CAApB,CAAA;EAC9BT,QAAAA,YAAY,EAAGQ,CAAAA,IAAf,CAAoBN,OAApB,WAAmCC,MAAnC,CAAA,CAAA;SAHF,CAAA,CAAA;EAKD,KAXM,CAAP,CAAA;EAYD,GAAA;;EAED,EAAA,IAAMQ,QAAQ,GAAG;EACfJ,IAAAA,IADe,EACkC,SAAA,IAAA,GAAA;EAC/C,MAAA,OAAO,IAAIN,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;UAC5CH,YAAY,EAAA,CACTQ,IADH,CACQ,UAAyB,KAAA,EAAA;EAAA,UAAA,IAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;EAAA,cAAdH,KAAc,GAAA,KAAA,CAAA,CAAA,CAAA;EAAA,cAAPC,IAAO,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;;YAC7B,IAAID,KAAK,GAAG,CAAZ,EAAe;EACb,YAAA,IAAI,CAACR,MAAM,CAACZ,MAAZ,EAAoB,OAAOiB,OAAO,CAAC;EAAEO,cAAAA,KAAK,EAAEC,SAAT;EAAoBZ,cAAAA,IAAI,EAAE,IAAA;EAA1B,aAAD,CAAd,CAAA;EACpB,YAAA,IAAMc,MAAuC,GAAG;EAAEH,cAAAA,KAAK,EAAEZ,MAAT;EAAiBC,cAAAA,IAAI,EAAE,KAAA;eAAvE,CAAA;EACAD,YAAAA,MAAM,GAAG,EAAT,CAAA;cACA,OAAOK,OAAO,CAACU,MAAD,CAAd,CAAA;EACD,WAAA;;YACD,IAAMC,IAAI,GAAGhB,MAAM,CAACiB,MAAP,CAAc,CAAd,EAAiBT,KAAjB,CAAb,CAAA;YACAR,MAAM,GAAGA,MAAM,CAACiB,MAAP,CAAcT,KAAK,GAAGC,IAAtB,CAAT,CAAA;EACA,UAAA,OAAOJ,OAAO,CAAC;EAAEO,YAAAA,KAAK,EAAEI,IAAT;EAAef,YAAAA,IAAI,EAAE,KAAA;EAArB,WAAD,CAAd,CAAA;EACD,SAXH,WAYSK,MAZT,CAAA,CAAA;EAaD,OAdM,CAAP,CAAA;EAeD,KAAA;KAjBH,CAAA;;EAoBA,EAAA,IAAIX,WAAJ,EAAiB;EACfmB,IAAAA,QAAQ,CAAClB,MAAM,CAACC,aAAR,CAAR,GAAiC,YAAmC;EAClE,MAAA,OAAO,IAAP,CAAA;OADF,CAAA;EAGD,GAAA;;EAED,EAAA,OAAOiB,QAAP,CAAA;EACD;;;;;;;;"}