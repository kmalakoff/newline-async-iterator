{"version":3,"file":"newline-async-iterator.js","sources":["../../node_modules/index-of-newline/dist/esm/index.mjs","../../src/decodeUTF8.ts","../../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */ export default function indexOfNewline(string, offset = 0, includeLength = false) {\n    if (offset < 0) throw new Error('Unexpected negative offset');\n    if (offset > string.length) throw new Error(`Offset is longer than the string. Offset: ${offset}. String: ${string.length}`);\n    while(offset < string.length){\n        const value = string[offset];\n        if (value === '\\n') return includeLength ? [\n            offset,\n            1\n        ] : offset;\n        else if (value === '\\r') {\n            return includeLength ? [\n                offset,\n                string[offset + 1] === '\\n' ? 2 : 1\n            ] : offset;\n        }\n        offset++;\n    }\n    return includeLength ? [\n        -1,\n        0\n    ] : -1;\n};\n","// https://developer.mozilla.org/en-US/docs/Glossary/Base64#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n/* c8 ignore start */\nlet decodeUTF8 = function decode(uint8Array: Uint8Array): string {\n  let sView = '';\n\n  for (let nPart: number, nLen = uint8Array.length, nIdx = 0; nIdx < nLen; nIdx++) {\n    nPart = uint8Array[nIdx];\n    sView += String.fromCharCode(\n      nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n          (nPart - 252) * 1073741824 + ((uint8Array[++nIdx] - 128) << 24) + ((uint8Array[++nIdx] - 128) << 18) + ((uint8Array[++nIdx] - 128) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n        : nPart > 247 && nPart < 252 && nIdx + 4 < nLen /* five bytes */\n          ? ((nPart - 248) << 24) + ((uint8Array[++nIdx] - 128) << 18) + ((uint8Array[++nIdx] - 128) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n          : nPart > 239 && nPart < 248 && nIdx + 3 < nLen /* four bytes */\n            ? ((nPart - 240) << 18) + ((uint8Array[++nIdx] - 128) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen /* three bytes */\n              ? ((nPart - 224) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n              : nPart > 191 && nPart < 224 && nIdx + 1 < nLen /* two bytes */\n                ? ((nPart - 192) << 6) + uint8Array[++nIdx] - 128\n                : /* nPart < 127 ? */ /* one byte */\n                  nPart\n    );\n  }\n\n  return sView;\n};\n/* c8 ignore stop */\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder('utf8');\n  decodeUTF8 = function decodeTextDecoder(uint8Array: Uint8Array): string {\n    return decoder.decode(uint8Array);\n  };\n}\n\nexport default decodeUTF8;\n","import indexOfNewline from 'index-of-newline';\n// @ts-ignore\nimport decodeUTF8 from './decodeUTF8.ts';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>): AsyncIterableIterator<string> {\n  let string = '';\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise((resolve, reject) => {\n      const args = indexOfNewline(string, 0, true) as number[];\n      const index = args[0];\n      const skip = args[1];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === '\\n') return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then((next) => {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise((resolve, reject) => {\n        generateNext()\n          .then((args) => {\n            const index = args[0];\n            const skip = args[1];\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = {\n                value: string,\n                done: false,\n              };\n              string = '';\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["indexOfNewline","string","offset","includeLength","Error","length","value","decodeUTF8","decode","uint8Array","sView","nPart","nLen","nIdx","String","fromCharCode","TextDecoder","decoder","decodeTextDecoder","hasIterator","Symbol","asyncIterator","newlineIterator","source","done","sourceIterator","generateNext","Promise","resolve","reject","args","index","skip","next","then","undefined","catch","iterator","result","line","substr"],"mappings":"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"}