{"version":3,"file":"newline-async-iterator.js","sources":["../../node_modules/index-of-newline/dist/esm/index.mjs","../../src/decodeUTF8.ts","../../src/index.ts"],"sourcesContent":["/**\n * Find indexOf CR, LF, or CRLF\n *\n * @param string The search string\n * @param offset The offset for searching\n * @param includeLength Include the length in the return value\n * @returns When includeLength is true, returns a pair of [offset, length] to provide the length of CR (1), LF (1) or CRLF (2)\n */ export default function indexOfNewline(string) {\n    var offset = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, includeLength = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    if (offset < 0) throw new Error(\"Unexpected negative offset\");\n    if (offset > string.length) throw new Error(\"Offset is longer than the string. Offset: \".concat(offset, \". String: \").concat(string.length));\n    while(offset < string.length){\n        var value = string[offset];\n        if (value === \"\\n\") return includeLength ? [\n            offset,\n            1\n        ] : offset;\n        else if (value === \"\\r\") {\n            return includeLength ? [\n                offset,\n                string[offset + 1] === \"\\n\" ? 2 : 1\n            ] : offset;\n        }\n        offset++;\n    }\n    return includeLength ? [\n        -1,\n        0\n    ] : -1;\n};\n","/* eslint-disable no-undef */\n// https://developer.mozilla.org/en-US/docs/Glossary/Base64#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n/* c8 ignore start */\nlet decodeUTF8 = function decode(uint8Array: Uint8Array): string {\n  let sView = '';\n\n  for (let nPart, nLen = uint8Array.length, nIdx = 0; nIdx < nLen; nIdx++) {\n    nPart = uint8Array[nIdx];\n    sView += String.fromCharCode(\n      nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n        ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n          (nPart - 252) * 1073741824 +\n            ((uint8Array[++nIdx] - 128) << 24) +\n            ((uint8Array[++nIdx] - 128) << 18) +\n            ((uint8Array[++nIdx] - 128) << 12) +\n            ((uint8Array[++nIdx] - 128) << 6) +\n            uint8Array[++nIdx] -\n            128\n        : nPart > 247 && nPart < 252 && nIdx + 4 < nLen /* five bytes */\n        ? ((nPart - 248) << 24) + ((uint8Array[++nIdx] - 128) << 18) + ((uint8Array[++nIdx] - 128) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen /* four bytes */\n        ? ((nPart - 240) << 18) + ((uint8Array[++nIdx] - 128) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen /* three bytes */\n        ? ((nPart - 224) << 12) + ((uint8Array[++nIdx] - 128) << 6) + uint8Array[++nIdx] - 128\n        : nPart > 191 && nPart < 224 && nIdx + 1 < nLen /* two bytes */\n        ? ((nPart - 192) << 6) + uint8Array[++nIdx] - 128\n        : /* nPart < 127 ? */ /* one byte */\n          nPart\n    );\n  }\n\n  return sView;\n};\n/* c8 ignore stop */\n\nif (typeof TextDecoder !== 'undefined') {\n  const decoder = new TextDecoder('utf8');\n  decodeUTF8 = function decodeTextDecoder(uint8Array: Uint8Array): string {\n    return decoder.decode(uint8Array);\n  };\n}\n\nexport default decodeUTF8;\n","import indexOfNewline from 'index-of-newline';\n// @ts-ignore\nimport decodeUTF8 from './decodeUTF8.ts';\n\nconst hasIterator = typeof Symbol !== 'undefined' && Symbol.asyncIterator;\n\n/**\n * Create a newline iterator recognizing CR, LF, and CRLF using the Symbol.asyncIterator interface\n *\n * @param string The string to iterate through\n *\n * ```typescript\n * import newlineIterator from \"newline-async-iterator\";\n *\n * const iterator = newlineIterator(\"some\\r\\nstring\\ncombination\\r\");\n * const results = [];\n * for (const line of iterator) results.push(line);\n * console.log(results); // [\"some\", \"string\", \"combination\"];\n * ```\n */\n\nexport default function newlineIterator(source: AsyncIterable<Uint8Array> | AsyncIterator<Uint8Array>): AsyncIterableIterator<string> {\n  let string = '';\n  let done = false;\n\n  /* c8 ignore start */\n  const sourceIterator = hasIterator ? source[Symbol.asyncIterator]() : source;\n  /* c8 ignore stop */\n\n  function generateNext(): Promise<number[]> {\n    return new Promise(function (resolve, reject) {\n      const [index, skip] = indexOfNewline(string, 0, true) as number[];\n      if (index >= 0) {\n        if (index !== string.length - 1 || string[index] === '\\n') return resolve([index, skip]);\n      }\n      if (done) return resolve([index, skip]);\n      sourceIterator.next().then(function (next) {\n        if (next.done) done = true;\n        if (next.value !== undefined) string += decodeUTF8(next.value);\n        generateNext().then(resolve).catch(reject);\n      });\n    });\n  }\n\n  const iterator = {\n    next(): Promise<IteratorResult<string, boolean>> {\n      return new Promise(function (resolve, reject) {\n        generateNext()\n          .then(function ([index, skip]) {\n            if (index < 0) {\n              if (!string.length) return resolve({ value: undefined, done: true });\n              const result: IteratorResult<string, boolean> = { value: string, done: false };\n              string = '';\n              return resolve(result);\n            }\n            const line = string.substr(0, index);\n            string = string.substr(index + skip);\n            return resolve({ value: line, done: false });\n          })\n          .catch(reject);\n      });\n    },\n  };\n\n  if (hasIterator) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<string> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<string>;\n}\n"],"names":["decodeUTF8","decode","uint8Array","sView","nPart","nLen","length","nIdx","String","fromCharCode","TextDecoder","decoder","decodeTextDecoder","hasIterator","Symbol","asyncIterator","newlineIterator","source","string","done","sourceIterator","generateNext","Promise","resolve","reject","indexOfNewline","index","skip","next","then","value","undefined","catch","iterator","result","line","substr"],"mappings":"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"}