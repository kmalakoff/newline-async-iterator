{
  "name": "newline-async-iterator",
  "version": "0.1.25",
  "description": "Line-by-line async iterator for the browser and node",
  "keywords": [
    "CR",
    "CRLF",
    "LF",
    "asynciterator",
    "break",
    "eol",
    "iterate",
    "iterator",
    "line",
    "line-break",
    "line-next",
    "linebreak",
    "lines",
    "newline",
    "next",
    "next-line",
    "response-iterator",
    "split",
    "string",
    "symbol.asynciterator"
  ],
  "homepage": "https://github.com/kmalakoff/newline-async-iterator#README.md",
  "bugs": {
    "url": "https://github.com/kmalakoff/newline-async-iterator/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/kmalakoff/newline-async-iterator.git"
  },
  "license": "MIT",
  "author": {
    "name": "Kevin Malakoff",
    "email": "kmalakoff@gmail.com",
    "url": "https://github.com/kmalakoff"
  },
  "type": "module",
  "exports": {
    ".": {
      "import": "./dist/esm/index.mjs",
      "require": "./dist/cjs/index.cjs"
    },
    "./package.json": "./package.json",
    "./umd": "./dist/umd/newline-async-iterator.cjs"
  },
  "main": "dist/cjs/index.cjs",
  "types": "dist/cjs/index.d.cts",
  "files": [
    "dist"
  ],
  "scripts": {
    "build": "tsds build",
    "deploy": "tsds deploy",
    "docs": "tsds docs",
    "format": "biome check --write --unsafe src/ test/",
    "test": "tsds test:browser --config wtr.config.mjs && tsds test:node --no-timeouts",
    "test:browser": "tsds test:browser --config wtr.config.mjs",
    "test:engines": "tsds test:browser --config wtr.config.mjs && nvu engines tsds test:node --no-timeouts",
    "version": "tsds version"
  },
  "dependencies": {
    "index-of-newline": "^1.1.30"
  },
  "devDependencies": {
    "@types/mocha": "*",
    "@types/node": "*",
    "@web/dev-server-import-maps": "*",
    "pinkie-promise": "*",
    "tsds-web-test-runner": "*"
  },
  "engines": {
    "node": ">=0.8"
  },
  "tsds": {
    "source": "src/index.ts",
    "targets": [
      "cjs",
      "esm",
      "umd"
    ],
    "globals": {
      "index-of-newline": "indexOfNewline"
    }
  }
}
